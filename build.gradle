plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.sonarqube" version "4.3.1.3277"
    id 'jacoco'
}

jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}



//If I dont hardcode them it gives failed authentication
sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.token", "squ_4050a010bc2318218569445ef46d01632f0501fb"
        property "sonar.projectName", "babysita"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/customJacocoReportDir/test/jacocoTestReport.xml"
    }
}

group = 's3.fontys'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.mapstruct:mapstruct:1.5.0.Beta2'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.mapstruct:mapstruct:1.5.0.Beta2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    testImplementation 'org.projectlombok:lombok:1.18.28'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.0.Beta2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.11.2'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.0.4'
    testImplementation 'com.playtika.testcontainers:embedded-mysql:3.0.0-RC9'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
